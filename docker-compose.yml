networks:
  chiwi_network:
    driver: bridge
    name: chiwi_network  # Nombre explícito
    attachable: true     # Permite conectar contenedores manualmente

volumes:
  db_users_server_data:
    driver: local
  # db_chats_server_data:
  #   driver: local
  mongodb_data:  # Nuevo volumen para MongoDB
    driver: local

services:
  db_users:
    image: mysql:8.0
    container_name: db_users
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD_USERS}
      MYSQL_DATABASE: ${MYSQL_DATABASE_USERS}
      MYSQL_USER: ${MYSQL_USER_USERS}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD_USERS}
    volumes:
      - db_users_server_data:/var/lib/mysql
    ports:
      - "${DB_USERS_PORT:-3306}:3306"
    networks:
      chiwi_network:
        aliases:
          - db_users
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -uroot -p$${MYSQL_ROOT_PASSWORD_USERS} --silent"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 30s

  # db_chats:
  #   image: mysql:8.0
  #   container_name: db_chats
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD_CHATS}
  #     MYSQL_DATABASE: ${MYSQL_DATABASE_CHATS}
  #     MYSQL_USER: ${MYSQL_USER_CHATS}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD_CHATS}
  #   volumes:
  #     - db_chats_server_data:/var/lib/mysql
  #   ports:
  #     - "${DB_CHATS_PORT:-3307}:3306"  # Usa 3307 como valor por defecto
  #   networks:
  #     chiwi_network:
  #       aliases:
  #         - db_chats
  #   healthcheck:
  #     test: ["CMD-SHELL", "mysqladmin ping -uroot -p$${MYSQL_ROOT_PASSWORD_CHATS} --silent"]
  #     interval: 5s
  #     timeout: 10s
  #     retries: 20
  #     start_period: 30s

  mongodb:
    image: mongo:4.4
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ChiwireadorMongo  # Cambia esto por tu contraseña
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      chiwi_network:
        aliases:
          - mongodb
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  usuarios_service:
    build: 
      context: ./usuarios_service
      dockerfile: DockerFile
    container_name: usuarios-service
    restart: unless-stopped
    volumes:
      - ./usuarios_service:/var/www/html
    environment:
      - DB_HOST=db_users
      - DB_USER=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD_USERS}
      - DB_DATABASE=${MYSQL_DATABASE_USERS}
      - DB_USERS_PORT=3306  
      - JWT_SECRET=${JWT_SECRET}
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      chiwi_network:
        aliases:
          - usuarios_service
    ports:
      - "8888:80"
    depends_on:
      db_users:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: apache2-foreground  # Solo inicia Apache, sin migraciones automáticas

  # chats_service:
  #   build: 
  #     context: ./chats_service
  #     dockerfile: DockerFile
  #   container_name: chats-service
  #   restart: unless-stopped
  #   volumes:
  #     - ./chats_service:/var/www/html
  #   environment:
  #     - DB_HOST=db_chats
  #     - DB_USER=root
  #     - DB_PASSWORD=${MYSQL_ROOT_PASSWORD_CHATS}
  #     - DB_DATABASE=${MYSQL_DATABASE_CHATS}
  #     - DB_CHATS_PORT=3306
  #     - APP_ENV=production
  #     - APP_DEBUG=false
  #   networks:
  #     chiwi_network:
  #       aliases:
  #         - chats_service
  #   ports:
  #     - "8889:80"
  #   depends_on:
  #     db_chats:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   command: apache2-foreground  # Solo inicia Apache, sin migraciones automáticas
  
  chats_service_mongo:
    build: 
      context: ./chats_service_mongo
      dockerfile: DockerFile
    container_name: chats-service-mongo
    restart: always
    volumes:
      - ./chats_service_mongo:/var/www/html  # Crea esta carpeta
    environment:
      - DB_TYPE=mongodb  # Nueva variable para identificar el tipo de DB
      - MONGO_HOST=mongodb
      - MONGO_USER=root
      - MONGO_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      chiwi_network:
        aliases:
          - chats_service_mongo
    ports:
      - "8890:80"  # Puerto diferente al original
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: apache2-foreground